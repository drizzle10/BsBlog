<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.BsBlog.mapper.MemberMapper">
<!--  
	CREATE TABLE member(
			member_idx INT PRIMARY KEY AUTO_INCREMENT,
			member_id VARCHAR(16) UNIQUE NOT NULL,
			member_password VARCHAR(100) NOT NULL,
			member_name VARCHAR(10) NOT NULL,
			member_address VARCHAR(100) NOT NULL,
			member_postcode VARCHAR(6) NOT NULL,
			member_phone VARCHAR(40) UNIQUE NOT NULL,
			member_email VARCHAR(40) UNIQUE NOT NULL,
			member_email_auth VARCHAR(1) NOT NULL,
			member_date DATE NOT NULL
	);
-->	

	<!-- 가입 -->
	<insert id="joinPro">
		INSERT INTO 
					member
			VALUES (
					IFNULL(
	            	   (SELECT 
	                		   MAX(member_idx)
	                	  FROM 
	                		   member m
	               		),0
	              	  )+1,
					#{member_id},		
					#{member_password},		
					#{member_name},
					#{member_address},
					#{member_postcode},			
					#{member_phone},	
					#{member_email},  
					'Y',				
					now()
					)
	</insert>
	
	<!-- 아이디 중복 확인 -->
  	<select id="idDup_check" resultType="integer">
  		SELECT 
  				COUNT(member_id) 
  		  FROM 
  		  		member 
  		 WHERE 
  		 		member_id = #{member_id}
  	</select>

	<!-- 메일 중복 확인 -->
  	<select id="mailDup_check" resultType="integer">
  		SELECT 
  				COUNT(member_email) 
  		  FROM 
  		  		member 
  		 WHERE 
  		 		member_email = #{member_email}
  	</select>
  	
  	<!-- 로그인 전 비밀번호 조회 -->
  	<select id="select_memberPassword" resultType="string">
  		SELECT 
  				member_password
  		  FROM
  		  		member
  		 WHERE
  		 		member_id = #{member_id}	
  	</select>
  	
  	<!-- 나의 정보 조회 -->
  	<select id="selectMyInfo" resultType="com.project.BsBlog.vo.MemberVO">
  		SELECT
  				*
  		  FROM
  		  		member
  		 WHERE
  		 		member_id = #{sId}
  	</select>
  	
  	<!-- 정보 수정 -->
  	<update id="modifyMyInfoPro">
  		UPDATE
  				member
  		   SET
  		   		member_id = #{member_id},
  		   		member_password = #{member_password},
  		   		member_name = #{member_name},
  		   		member_address = #{member_address},
  		   		member_postcode = #{member_postcode},
  		   		member_phone = #{member_phone},
  		   		member_email = #{member_email}
  		 WHERE
  		 		member_id = #{member_id}  		
  	</update>
  	
  	<!-- 나의 신고 조회 -->
  	<select id="selectMyReport" resultType="com.project.BsBlog.vo.ReportVO">
  		SELECT 
			   * 
		  FROM 
		  	   report
		 WHERE 
		 	   report_id = #{sId} 	   
		<if test="!keyword.equals('')">
			<choose>
				<when test="searchType.equals('status')">
					AND 
						  report_status 
					 LIKE 
					 	  '%${keyword}%' 
				</when>
				<when test="searchType.equals('content')">
					AND 
						  report_content 
					 LIKE 
					 	  '%${keyword}%' 
				</when>
			</choose>
		</if>
	ORDER BY
			 report_idx DESC
	   LIMIT 
	   		 #{startRow}, #{listLimit} 	
  	</select>
  	
  	<!-- 나의 신고 목록 갯수 조회 -->
  	<select id="selectMyReportCount" resultType="integer">
  		SELECT 
			   COUNT(*) 
		  FROM 
		  	   report
		 WHERE 
		 	   report_id = #{sId}	   
		<if test="!keyword.equals('')">
			<choose>
				<when test="searchType.equals('status')">
					AND 
						  report_status 
					 LIKE 
					 	  '%${keyword}%' 
				</when>
				<when test="searchType.equals('content')">
					AND 
						  report_content 
					 LIKE 
					 	  '%${keyword}%' 
				</when>
			</choose>
		</if>
  	</select>
  	
  	<!-- 나의 신고 상세 조회 -->
  	<select id="selectMyReportDetail" resultType="com.project.BsBlog.vo.ReportVO">
  		SELECT 
  				*
  		  FROM
  		  		report
  		 WHERE
  		 		report_id = #{report_id} 		
  	</select>
  	
  	<!-- 나의 좋아요 조회 -->
	<select id="selectMyHeart" resultType="com.project.BsBlog.vo.NoteVO">
		SELECT
				n.note_subject,
				n.note_id,
				h.heart_date
		 FROM
		 		note n
		 JOIN
		 		heart h
	  	   ON 
	  	   		n.note_num = h.rf_note_num		 				
		 WHERE 
		 	    h.rf_member_idx = (
			 	    				SELECT 
			 	    						member_idx
			 	    				  FROM
			 	    				  		member
			 	    				 WHERE
			 	    				 		member_id = #{sId}
			 	    				)	
		<if test="!keyword.equals('')">
			<choose>
				<when test="searchType.equals('subject')">
					  AND 
						   n.note_subject 
					 LIKE 
					 	  '%${keyword}%' 
				</when>
				<when test="searchType.equals('id')">
					  AND 
						   n.note_id 
					 LIKE 
					 	  '%${keyword}%' 
				</when>
			</choose>
		</if>
	ORDER BY
			 h.heart_date DESC
	   LIMIT 
	   		 #{startRow}, #{listLimit} 	
  	</select>
  	
  		<!-- 나의 신고 목록 갯수 조회 -->
  	<select id="selectMyHeartCount" resultType="integer">
  		SELECT 
			  	COUNT(*) 
		  FROM 
		  	  	heart h
		  JOIN
		   	  	note n
		    ON
		    	h.rf_note_num = n.note_num	  	 
		 WHERE 
		 	    h.rf_member_idx = (
			 	    				SELECT 
			 	    						member_idx
			 	    				  FROM
			 	    				  		member
			 	    				 WHERE
			 	    				 		member_id = #{sId}
			 	    				)	   
		<if test="!keyword.equals('')">
			<choose>
				<when test="searchType.equals('subject')">
					AND 
						n.note_subject 
				   LIKE
						'%${keyword}%' 
				</when>
				<when test="searchType.equals('id')">
					AND
						n.note_id 
				   LIKE
					 	'%${keyword}%' 
				</when>
			</choose>
		</if>
  	</select>
  	
  	<!-- 탈퇴 -->
  	<delete id="deleteMyInfoPro">
  		DELETE
  		  FROM
  		  		member
  		 WHERE
  		 		member_idx = #{member_idx}
  	</delete>
  	
  	<!-- 이메일 이용하여 아이디 찾기 -->
	<select id="selectMemberEmail" resultType="com.project.BsBlog.vo.MemberVO">
		SELECT 
				* 
		  FROM 
		  		member
		 WHERE 
		 		member_email = #{member_email}
	</select>


</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.BsBlog.mapper.BoardMapper">
	
	<!-- 
	CREATE TABLE diary(
		diary_num INT PRIMARY KEY,
		diary_id VARCHAR(16) NOT NULL,
		diary_password VARCHAR(20) NOT NULL,
		diary_subject VARCHAR(50) NOT NULL,
		diary_content VARCHAR(2000) NOT NULL,
		diary_file VARCHAR(50) NOT NULL,
		diary_realfile VARCHAR(50) NOT NULL,
		diary_re_ref INT NOT NULL,
		diary_re_lev INT NOT NULL,
		diary_re_seq INT NOT NULL,
		diary_readcount INT DEFAULT 0,
		diary_date DATE NOT NULL
	);

	CREATE TABLE note(
		note_num INT PRIMARY KEY,
		note_id VARCHAR(16) NOT NULL,
		note_password VARCHAR(20) NOT NULL,
		note_subject VARCHAR(50) NOT NULL,
		note_content VARCHAR(2000) NOT NULL,
		note_file VARCHAR(50) NOT NULL,
		note_realfile VARCHAR(50) NOT NULL,
		note_re_ref INT NOT NULL,
		note_re_lev INT NOT NULL,
		note_re_seq INT NOT NULL,
		note_readcount INT DEFAULT 0,
		note_date DATE NOT NULL
	);
	-->
	
	<!-- diary -->
	<!-- 글 목록 조회 -->
	<select id="selectDiary" resultType="com.project.BsBlog.vo.DiaryVO">
		SELECT
			   *
		  FROM
		  	   diary
		 <if test="!keyword.equals('')">
		 	<choose>
					<when test="searchType.equals('subject')">
						WHERE 
							  diary_subject 
						 LIKE 
						 	  '%${keyword}%'
					</when>
					<when test="searchType.equals('content')">
						WHERE 
							  diary_content 
						 LIKE 
						 	  '%${keyword}%' 
					</when>
					<when test="searchType.equals('subject_content')">
						WHERE 
							  diary_subject 
						 LIKE 
						 	  '%${keyword}%' 
						   OR 
						   	  diary_content 
						 LIKE 
						 	  '%${keyword}%'
					</when>
					<when test="searchType.equals('id')">
						WHERE 
							  diary_id 
						 LIKE 
						 	  '%${keyword}%'
					</when>
				</choose>
		 	</if>
		 	ORDER BY
					 diary_num DESC
			   LIMIT 
			   		 #{startRow}, #{listLimit} 	   
	</select>
	
	<!-- 글 목록 갯수 조회 -->
	<select id="selectDiaryCount" resultType="integer">
		SELECT 
			   COUNT(*)
		  FROM
		  	   diary
		<if test="!keyword.equals('')">
			<choose>
				<when test="searchType.equals('subject')">
					WHERE 
						  diary_subject 
					 LIKE 
					 	  '%${keyword}%'
				</when>
				<when test="searchType.equals('content')">
					WHERE 
						  diary_content 
					 LIKE 
					 	  '%${keyword}%' 
				</when>
				<when test="searchType.equals('subject_content')">
					WHERE 
						  diary_subject 
					 LIKE 
					 	  '%${keyword}%' 
					   OR 
					   	  diary_content 
					 LIKE 
					 	  '%${keyword}%'
				</when>
				<when test="searchType.equals('id')">
					WHERE 
						  diary_id 
					 LIKE 
					 	  '%${keyword}%'
				</when>
			</choose>
		</if>  	   
	</select>
	
	<!-- 글 작성 -->
	<insert id="writeDiaryPro">
		INSERT 
		  INTO
		  	   diary
	   VALUES(
				IFNULL(
	            	   (SELECT 
	                		   MAX(diary_num)
	                	  FROM 
	                		   diary d
	               		),0
	              	  )+1,    
				#{diary_id},
				#{diary_password},
				#{diary_subject},
				#{diary_content},
				#{diary_file},
				#{diary_realfile},
				#{diary_readcount},
				0, 
				0, 
				0,
				now()
		
			)
	</insert>
	
	<!-- 글 상세 조회 -->
	<select id="selectDiaryDetail" resultType="com.project.BsBlog.vo.DiaryVO">
		SELECT
			   *
		  FROM
		  	   diary
		 WHERE
		 	   diary_num = #{diary_num}	   
	</select>
	
	<!-- 글 조회수 증가 -->
	<update id="increaseDiaryReadCount">
		UPDATE
			   diary
		   SET
		       diary_readcount = diary_readcount + 1
		 WHERE
		 	   diary_num = #{diary_num}      
		       
	</update>
	
	<!-- 글 수정 -->
	<update id="modifyDiaryPro">
		UPDATE 
			   diary
	       SET
		   	   diary_id = #{diary_id},
		   	   diary_subject = #{diary_subject},
		   	   diary_content = #{diary_content}
		   <if test="!diary_file.equals('')">
			   , diary_file = #{diary_file}
			   , diary_realfile = #{diary_realfile}
		   </if>
	 	WHERE
		   	   diary_num = #{diary_num}
	   	  AND
	   	  	   diary_password = #{diary_password}	  
	</update>
	
	<!-- 글 삭제 전 실제 업로드된 파일명 조회 -->
	<select id="selectDiaryRealFile" resultType="string">
		SELECT
			   diary_realfile
		  FROM
		  	   diary
		 WHERE
		 	   diary_num = #{diary_num}	   	   
	</select>
	
	<!-- 글 삭제 -->
	<delete id="deleteDiaryPro">
		DELETE
		  FROM
			   diary
		 WHERE
		 	   diary_num = #{diary_num}
		   AND
		   	   diary_password = #{diary_password}	   	   
	</delete>
	
	<!-- note -->
	<!-- 글 목록 조회 -->
	<select id="selectNote" resultType="com.project.BsBlog.vo.NoteVO">
		SELECT
			   *
		  FROM
		  	   note
		 <if test="!keyword.equals('')">
		 	<choose>
				<when test="searchType.equals('subject')">
					WHERE 
						  note_subject 
					 LIKE 
					 	  '%${keyword}%'
				</when>
				<when test="searchType.equals('content')">
					WHERE 
						  note_content 
					 LIKE 
					 	  '%${keyword}%' 
				</when>
				<when test="searchType.equals('subject_content')">
					WHERE 
						  note_subject 
					 LIKE 
					 	  '%${keyword}%' 
					   OR 
					   	  note_content 
					 LIKE 
					 	  '%${keyword}%'
				</when>
				<when test="searchType.equals('id')">
					WHERE 
						  note_id 
					 LIKE 
					 	  '%${keyword}%'
				</when>
			</choose>
		 	</if>
		 	ORDER BY
					 note_num DESC
			   LIMIT 
			   		 #{startRow}, #{listLimit} 	   
	</select>
	
	<!-- 글 목록 갯수 조회 -->
	<select id="selectNoteCount" resultType="integer">
		SELECT 
			   COUNT(*)
		  FROM
		  	   note
		<if test="!keyword.equals('')">
			<choose>
				<when test="searchType.equals('subject')">
					WHERE 
						  note_subject 
					 LIKE 
					 	  '%${keyword}%'
				</when>
				<when test="searchType.equals('content')">
					WHERE 
						  note_content 
					 LIKE 
					 	  '%${keyword}%' 
				</when>
				<when test="searchType.equals('subject_content')">
					WHERE 
						 note_subject 
					 LIKE 
					 	  '%${keyword}%' 
					   OR 
					   	  note_content 
					 LIKE 
					 	  '%${keyword}%'
				</when>
				<when test="searchType.equals('id')">
					WHERE 
						  note_id 
					 LIKE 
					 	  '%${keyword}%'
				</when>
			</choose>
		</if>  	   
	</select>
	
	<!-- 글 작성 -->
	<insert id="writeNotePro">
		INSERT 
		  INTO
		  	   note
	   VALUES(
				IFNULL(
	            	   (SELECT 
	                		   MAX(note_num)
	                	  FROM 
	                		   note n
	               		),0
	              	  )+1,    
				#{note_id},
				#{note_password},
				#{note_subject},
				#{note_content},
				#{note_file},
				#{note_realfile},
				#{note_readcount},
				0, 
				0, 
				0,
				now()
			)
	</insert>

	<!-- 글 상세 조회 -->
	<select id="selectNoteDetail" resultType="com.project.BsBlog.vo.NoteVO">
		SELECT
			   *
		  FROM
		  	   note
		 WHERE
		 	   note_num = #{note_num}	   
	</select>
	
	<!-- 글 조회수 증가 -->
	<update id="increaseNoteReadCount">
		UPDATE
			   note
		   SET
		       note_readcount = note_readcount + 1
		 WHERE
		 	   note_num = #{note_num}      
		       
	</update>
	
	<!-- note_detail 들어가면 보이는 좋아요 출력 -->
	<select id="selectHeart" resultType="integer">
        SELECT 
        		COUNT(*) 
          FROM 
          		heart
         WHERE 
         		rf_note_num = #{note_num}
           AND 
           		rf_member_idx = (SELECT 
           								member_idx 
								   FROM 
								   		member
								  WHERE 
								  		member_id = #{sId}
								)
	</select>
	
	<!-- 좋아요 추가 -->
	<insert id="addHeart">
		INSERT 
		  INTO 
		  		heart
		VALUES (
				IFNULL(
	            	   (SELECT 
	                		   MAX(heart_idx)
	                	  FROM 
	                		   heart h
	               		),0
	              	  )+1,   
				#{note_num}, 
				(SELECT 
			 			 member_idx 
                   FROM 
                    	 member
                  WHERE 
                   		 member_id = #{sId}
                ),
				now()
				)
	</insert>
	
	<!-- 좋아요 해제 -->
	<delete id="deleteHeart">
		  DELETE 
		    FROM 
		    		heart
		   WHERE 
		   			rf_note_num = #{note_num}
			 AND 
			 		rf_member_idx = (SELECT 
			 								member_idx 
									   FROM 
									   		member
									  WHERE 
									  		member_id = #{sId}
									)
	</delete>
	
	<!-- 글 수정 -->
	<update id="modifyNotePro">
		UPDATE 
			   note
	       SET
		   	   note_id = #{note_id},
		   	   note_subject = #{note_subject},
		   	   note_content = #{note_content}
		   <if test="!note_file.equals('')">
			   , note_file = #{note_file}
			   , note_realfile = #{note_realfile}
		   </if>
	 	WHERE
		   	   note_num = #{note_num}
	   	  AND
	   	  	   note_password = #{note_password}	  
	</update>
	
	<!-- 글 삭제 전 실제 업로드된 파일명 조회 -->
	<select id="selectNoteRealFile" resultType="string">
		SELECT
			   note_realfile
		  FROM
		  	   note
		 WHERE
		 	   note_num = #{note_num}	   	   
	</select>
	
	<!-- 글 삭제 -->
	<delete id="deleteNotePro">
		DELETE
		  FROM
			   note
		 WHERE
		 	   note_num = #{note_num}
		   AND
		   	   note_password = #{note_password}	   	   
	</delete>
</mapper>
